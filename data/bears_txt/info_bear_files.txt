## Dispersal multipliers

users can input the relative probability of dispersal between each region, in the form of
a matrix. E.g., perhaps you think that the probability of
dispersal between continents is 1/10th the probability of
dispersal within a continent. You would then put a 1 for
within-continent dispersal events, and a 0.1 for between-continent dispersal events. 

manual_dispersal_multipliers_eastward_only_wZeros.txt
==============================
K O M H
1 1 0 0
0 1 1 0
0 0 1 1
0 0 0 1

END 
===============================

If you run the default example Psychotria dataset with this
dispersal multipliers file, you will find that you reproduce
the parameter inferences and log-likelihood of the data that
you will get running the same model in LAGRANGE (Python or
C++) under the M2 model.

NOTE #1: When you do a DEC+J version of the model, the SAME
dispersal multipliers get applied to "j" events
(founder-events at speciation) as to "d" events
(range-expansion events along branches). This is not the
only way that reality could work, but it seemed "fairest"
for the initial comparisons of DEC and DEC+J. 


## Time-stratified dispersal

manual_dispersal_multipliers_with_0s.txt
==================
K O M H
1 1 1 1
1 1 1 1
1 1 1 1
1 1 1 1

K O M H
1 1 1 0
1 1 1 0
1 1 1 0
0 0 0 1

K O M H
1 1 0 0
1 1 0 0
0 0 1 0
0 0 0 1

K O M H
1 0 0 0
0 1 0 0
0 0 1 0
0 0 0 1

K O M H
1 0 0 0
0 1 0 0
0 0 1 0
0 0 0 1

END

================== 

## Time periods

timeperiods.txt
==================
0.5
1.9
3.7
5.1
10 

================== 

...these are the time-points at which each of the main
Hawaiian Islands emerged. The 10 my is arbitrary, the last
age just has to be older than the bottom of the tree (5.2 my
in the case of Psychotria). 
NOTE #2: To make these analyses work, you have to make sure
you give the BioGeoBEARS_run_object the correct
path+filename of each file you want it to see. You also
have to uncomment some/all of these lines in the example
script, and edit the file names to match whatever your
filenames are: 

NOTE #3: In some cases, I have found that having zeros in
dispersal matrices causes crashes in the ML search, perhaps
because of precision under-runs, or because with certain
data, all possible histories have probability 0.

In these cases, the solution is to replace the zeros with
some extremely low value, e.g.:

manual_dispersal_multipliers_without_0s.txt
=============================
K O M H
1 1 1 1
1 1 1 1
1 1 1 1
1 1 1 1

K O M H
1 1 1 0.0000001
1 1 1 0.0000001
1 1 1 0.0000001
0.0000001 0.0000001 0.0000001 1

K O M H
1 1 0.0000001 0.0000001
1 1 0.0000001 0.0000001
0.0000001 0.0000001 1 0.0000001
0.0000001 0.0000001 0.0000001 1

K O M H
1 0.0000001 0.0000001 0.0000001
0.0000001 1 0.0000001 0.0000001
0.0000001 0.0000001 1 0.0000001
0.0000001 0.0000001 0.0000001 1

K O M H
1 0.0000001 0.0000001 0.0000001
0.0000001 1 0.0000001 0.0000001
0.0000001 0.0000001 1 0.0000001
0.0000001 0.0000001 0.0000001 1

END

=============================


## Areas allowed matrices

areas_allowed.txt
==================
K O M H
1 1 1 1
1 1 1 1
1 1 1 1
1 1 1 1

K O M H
1 1 1 0
1 1 1 0
1 1 1 0
0 0 0 0

K O M H
1 1 0 0
1 1 0 0
0 0 0 0
0 0 0 0

K O M H
1 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0

K O M H
1 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0

END

================== 


## Area Adjacency matrix
area_adj.txt

